use_r("parsely")
library(c(devtools, roxygen2))
library(devtools)
library(roxygen2)
use_r("parsely")
load_all()
load_all()
setwd("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data")
place <- getwd()
setwd("C:/Users/david/OneDrive/Desktop/DeskFrogs/ConvenienceSC")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
use_package("tidyverse")
use_package("readr")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
library(readr)
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
tg <- read_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
spec()
spec("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
load_all()
tg <- read_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
view(tg)
library(tidyverse)
view(tg)
tg[["BIOCARTA_ETS_PATHWAY"]]
sub_tg <- tg[["BIOCARTA_ETS_PATHWAY"]]
sub_tg
sub_tg[17]
parse_genes(sub_tg[17])
parse_genes(tg[["BIOCARTA_ETS_PATHWAY"]][17])
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
load_all()
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
col_tg <- colnames(x)[2]
col_tg <- colnames(tg)[2]
tg[[col_tg]]
tg[[col_tg]][17]
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
load_all()
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
t <- c(1, 2, 4, 6, 7, 4)
t[t%2 == 0]
t[t%%2 == 0]
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
load_all()
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
use_package("stringr")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
load_all()
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
load_all()
parse_gsea_tsv("//wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/BIOCARTA_ETS_PATHWAY.v2023.2.Mm.tsv")
place
p <- "\\\\wsl.localhost/Ubuntu/home/naranjita/lab_data/HRT_Data/data/metabolic_genes.rds"
load_all()
parse_rds_vector(p)
use_package("dplyr")
"https://maayanlab.cloud/Harmonizome/api/1.0/gene_set/ets/GeneRIF+Biological+Term+Annotations"
load_all()
parse_raw("https://maayanlab.cloud/Harmonizome/api/1.0/gene_set/ets/GeneRIF+Biological+Term+Annotations")
use_mit_license()
check()
check()
document()
document
document()
use_testthat()
use_test()
use_r("cabinet")
use_r("Heater")
use_package("ComplexHeatmap")
use_package("seurat")
library(Seurat)
use_package("Seurat")
use_test()
test_something <- function(){x <- 1}
test_something()
test_something <- function(){}
test_something <- function(){
x <- 1
x
}
test_something()
y <- test_something()
str <- "ec"
cstr <- c("cse")
str[1]
cstr
dff <- data.frame(str = c(1, 3, 5, 78))
dff
dff <- data.frame(str[1] = c(1, 3, 5, 78))
dff <- data.frame(str[1] <- c(1, 3, 5, 78))
dff <- data.frame(str[1] = c(1, 3, 5, 78))
primes <- c(2,3, 5, 7,11,13,17,19)
data.frame(primes)
evens <- c(0, 2, 4, 6,8, 10,12, 14)
data.frame(primes, evens)
odds <- c(1, 3, 5)
data.frame(primes, evens, codds)
data.frame(primes, evens, odds)
odds <- c(1, 3, 5, 7, 9, 11, 13, 15,17)
data.frame(primes, evens, odds)
odds <- c(1, 3, 5, 7, 9, 11, 13, 15)
data.frame(primes, evens, odds)
all<- c(primes, evens, odds)
data.frame(all)
all
names(even)
names(evens)
names(evens) <- "Bert"
evens
as.numeric("A")
as.numeric("a")
strtoi("A")
strtoi("String")
strtoi("string")
strtoi("strin")
strtoi("1")
parse_integer("Text")
number("TESST")
"abb" > "aaa"
"c" > "a"
"C" > "c"
"C" < "c"
strs <- c("osief", "sjfe", "osief")
str_to_upper(strs)
floor(1.3)
floor(1.3, 3. 5)
floor(1.3, 3.5)
floor(1.9)
2/ 3
strs
str[1:2]
strs[1:2]
strs[:2]
strs[2:]
strs[2:3]
order(1, 2, 3)
"A" > 1
"A"
sort(4, 234, 5323, 52324, 523, 53422)
sort(c(4, 234, 5323, 52324, 523, 53422))
sort("a", "A", "B", "b", "lo", "L")
sort(c("a", "A", "B", "b", "lo", "L"))
list(1, 3, 5)
unlist(list(1, 3, 5))
unlist(unlist(list(1, 3, 5)))
c(unlist(list(1, 3, 5)))
split(unlist(list(1, 3, 5)))
unlist(unlist(list(1, 3, 5)))[[1]]
unlist(unlist(list(1, 3, 5)))[[2]]
unlist(unlist(list(1, 3, 5)))[[]]
unlist(unlist(list(1, 3, 5)))
c(1, 3, 5)
dff
tg
df
dff
dff <- data.frame(evens, odds, primes)
dff
fruit_type <- c("apple", "apple","pineapple","pear","apple","pear")
collor <- c("red","yellow", "yellow", "green", "red", "red")
taste <- c("yes", "no", "no", "yes", "yes", "no")
dffruits <- data.frame(fruit_type, collor, taste)
microtest <- function(dfff, gr){}
rm(microtest)
pr <- 1
groups <- lapply(c("fruit_type", "collor"), function(x){
vals <- unique(obj_df[[x]])
len <- length(vals)
vals <- lapply(vals, function(y){
rep(y, prev[1])
})
prev <- len
return (vals)
})
groups <- lapply(c("fruit_type", "collor"), function(x){
vals <- unique(dffruits[[x]])
len <- length(vals)
vals <- lapply(vals, function(y){
rep(y, prev[1])
})
prev <- len
return (vals)
})
groups <- lapply(c("fruit_type", "collor"), function(x){
vals <- unique(dffruits[[x]])
len <- length(vals)
vals <- lapply(vals, function(y){
rep(y, prev[1])
})
pr <- len
return (vals)
})
groups <- lapply(c("fruit_type", "collor"), function(x){
vals <- unique(dffruits[[x]])
vals <- lapply(vals, function(y){
rep(y, pr)
})
pr <- length(vals)
return (vals)
})
groups
pr <- 1
vals <- unique(dffruits$fruit_type)
vals_r <- lapply(vals, function(y){
rep(y, prev[1])
})
vals_r <- lapply(vals, function(y){
rep(y, pr)
})
vals_r
unlist(vals_r)
unlist(vals_r)[1]
unlist(vals_r)[2]
unlist(vals_r)[3]
pr <- 2
vals_r <- lapply(vals, function(y){
rep(y, pr)
})
vals_r
unlist(vals_r)
paste("test", 1, sep = "_")
vals_r <- rep(vals, pr)
vals_r
length(c(1, 3, 4), c(3, 4))
ls <- lapply(c(1, 2, 3)function(x){})
ls <- lapply(c(1, 2, 3)function(x){x*x})
ls <- lapply(c(1, 2, 3), function(x){x*x})
ls
ls <- lapply(ls, function(x){x*x})
ls
ps1 <- lapply(c("fruit_type", "taste"), function(x){
unique(dffruits[[x]])
})
ps1
num_unique_per_group <- unlist(lapply(ps1, function(y){
length(y)
}))
num_unique_per_group
prod(num_unique_per_group)
product_sum <- prod(num_unique_per_group)
groups1 <- lapply(groupings, function(x){
rep(x, product_sum/length(x))
})
groups1 <- lapply(ps1, function(x){
rep(x, product_sum/length(x))
})
groups1
microtest <- function(obj_df, groupings){
groups <- lapply(groupings, function(x){
unique(obj_df[[x]])
})
num_unique_per_group <- unlist(lapply(groups, function(y){
length(y)
}))
product_sum <- prod(num_unique_per_group)
groups <- lapply(groupings, function(x){
rep(x, product_sum/length(x))
})
return (groups)
}
microtest(dffruits, c("taste", "collor"))
groupings <- c("fruit_type", "collor", "taste")
groups <- lapply(groupings, function(x){
unique(dffruits[[x]])
})
num_unique_per_group <- unlist(lapply(groups, function(y){
length(y)
}))
product_sum <- prod(num_unique_per_group)
groups <- lapply(groupings, function(x){
rep(x, product_sum/length(x))
})
groups
groups <- lapply(groupings, function(x){
unique(obj_df[[x]])
})
groups <- lapply(groupings, function(x){
unique(dffruits[[x]])
})
groups
num_unique_per_group <- unlist(lapply(groups, function(y){
length(y)
}))
num_unique_per_group
product_sum <- prod(num_unique_per_group)
product_sum
groups <- lapply(groupings, function(x){
rep(x, product_sum/length(x))
})
groups
groups <- lapply(groupings, function(x){
unique(dffruits[[x]])
})
num_unique_per_group <- unlist(lapply(groups, function(y){
length(y)
}))
product_sum <- prod(num_unique_per_group)
groups
product_sum
lapply(groups, function(x){
rep(x, product_sum/length(x))
})
microtest <- function(obj_df, groupings){
groups <- lapply(groupings, function(x){
unique(obj_df[[x]])
})
num_unique_per_group <- unlist(lapply(groups, function(y){
length(y)
}))
product_sum <- prod(num_unique_per_group)
groups <- lapply(groups, function(x){
rep(x, product_sum/length(x))
})
return (groups)
}
data.frame(groups)
as.data.frame(groups)
groups
groups <- lapply(groups, function(x){
rep(x, product_sum/length(x))
})
groups
as.data.frame(groups)
view(as.data.frame(groups))
microtest
microtest(dffruits, groupings = c("fruit_type", "taste"))
microtest(dffruits, groupings = c("fruit_type"))
list(1, 2, 3)
class(list(1, 2, 3))
View(dff)
list(c(1, 3), c(3, 4, 5))
length(list(c(1, 3), c(3, 4, 5)))
lengths(list(c(1, 3), c(3, 4, 5)))
c("a", "b", "c")
l <- c("a", "b", "c")
m <- c(1, 2, 3)
lm <- (l = m)
lm
l
l <- c("a", "b", "c")
m
l
lm <- (l[l = m])
lm
l
m
c("te" = "xt", "wo" = "rds")
c("xt", "rds")
l <- c("xt", "rds")
names(l) <- ("te", "wo")
names(l) <- c("te", "wo")
l
test_groups <- list(c("water", "air", "earth"), c("pen", "pencil", "scissors"))
col_fun <- colorRamp2(c(0, 1), c("blue", "red"))
library(ComplexHeatmap)
col_fun <- colorRamp2(c(0, 1), c("blue", "red"))
use_package("colorRamp2")
col_fun <- colorRamp2(c(0, 1), c("blue", "red"))
install.packages(colorRamp2)
install.packages("colorRamp2")
col_fun <- colorRamp2(c(0, 1), c("blue", "red"))
col_fun = colorRamp2(c(0, 1), c("blue", "red"))
library(colorRamp2)
col_fun <- colorRamp2(c(0, 1), c("blue", "red"))
col_fun(.4)
col_fun(.1)
col_fun(.9)
col_fun2 <-  colorRamp2(c(0.5, 1), c("blue", "red"))
col_fun(0)
col_fun2(0)
col_fun2(.5)
col_fun2(.51)
col_fun(0.02)
sum <- 0
lapply(c(1, 3, 5, 4, 0), function(x){})
lapply(c(1, 3, 5, 4, 0), function(x){
sum <- sum + x
x+ sum})
groups
cr <- lapply(1:length(x), function(y){
col_fun(1/y)
})
col_fun <- colorRamp2::colorRamp2(c(1/2, 1), c("red", "blue"))
cr <- lapply(1:5, function(y){
col_fun(1/y)
})
cr
"#FF0000FF"
col_fun(.5)
col_fun(.6)
col_fun(.7)
cr <- lapply(1:5, function(y){
col_fun(1/y)
})
cr <- lapply(1:5, function(y){
col_fun(1/y)
})
cr <- lapply(1:5, function(y){
col_fun(1/y)
})
cr <- lapply(1:5, function(y){
print(y)
col_fun(1/y)
})
col_fun(1)
col_fun(1/2)
col_fun(1/3)
colors_ramped <- lapply(1:length(x), function(y){
print(y)
col_fun(1/length(x) * y)
})
colors_ramped <- lapply(1:length(5), function(y){
print(y)
col_fun(1/length(x) * y)
})
colors_ramped <- lapply(1:length(5), function(y){
print(y)
col_fun(1/5 * y)
})
colors_ramped
colors_ramped <- lapply(1:5, function(y){
col_fun(1/5 * y)
})
colors_ramped
